# **what?**
# Runs code quality checks, unit tests, and verifies python build on
# all code commited to the repository. This workflow should not
# require any secrets since it runs for PRs from forked repos.
# By default, secrets are not passed to workflows running from
# a forked repo.

# **why?**
# Ensure code for dbt meets a certain quality standard.

# **when?**
# This will run for all PRs, when code is pushed to a release
# branch, and when manually triggered.

name: Tests and Code Checks

on:
  push:
    branches:
      - "main"
      - "*.latest"
      - "releases/*"
    paths-ignore:
      - "**.MD"
      - "**.md"
  pull_request:
    paths-ignore:
      - "**.MD"
      - "**.md"
  workflow_dispatch:

permissions: read-all

# will cancel previous workflows triggered by the same event and for the same ref for PRs or same SHA otherwise
concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ contains(github.event_name, 'pull_request') && github.event.pull_request.head.ref || github.sha }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

jobs:
  code-quality:
    name: Code Quality

    runs-on: linux-ubuntu-latest
    timeout-minutes: 10

    strategy:
      fail-fast: false

    steps:
      - name: Check out the repository
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955  # actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065  # actions/setup-python@v5
        with:
          python-version: "3.9"

      - name: Install Hatch
        uses: pypa/hatch@257e27e51a6a5616ed08a39a408a21c35c9931bc  # pypa/hatch@install

      - name: Run Code Quality
        run: hatch -v run code-quality

  unit:
    name: unit test / python ${{ matrix.python-version }}

    runs-on: linux-ubuntu-latest
    timeout-minutes: 15

    permissions:
      # Gives the action the necessary permissions for publishing new
      # comments in pull requests.
      pull-requests: write
      # Gives the action the necessary permissions for pushing data to the
      # python-coverage-comment-action branch, and for editing existing
      # comments (to avoid publishing multiple comments in the same PR)
      contents: write

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
      - name: Check out the repository
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955  # actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065  # actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Hatch
        uses: pypa/hatch@257e27e51a6a5616ed08a39a408a21c35c9931bc  # pypa/hatch@install

      - name: Run Unit Tests and Generate Coverage
        run: hatch run -v +py=${{ matrix.python-version }} test:unit-with-cov

      # Only run coverage comment once (not for all python versions)
      - name: Coverage Comment
        if: matrix.python-version == '3.12' && github.event_name == 'pull_request'
        uses: py-cov-action/python-coverage-comment-action@1156b0812016e288297fceb8ebd6ee6ddcc834d5  # py-cov-action/python-coverage-comment-action@v3
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Store Pull Request comment to be posted
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02  # actions/upload-artifact@v4
        if: steps.coverage_comment.outputs.COMMENT_FILE_WRITTEN == 'true'
        with:
          name: python-coverage-comment-action
          path: python-coverage-comment-action.txt

  build:
    name: Build and Verify Packages
    runs-on: linux-ubuntu-latest

    steps:
      - name: Check out the repository
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955  # actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065  # actions/setup-python@v5
        with:
          python-version: "3.9"

      - name: Install Hatch
        uses: pypa/hatch@257e27e51a6a5616ed08a39a408a21c35c9931bc  # pypa/hatch@install

      - name: Build distributions
        run: hatch -v build

      - name: Verify distributions
        run: hatch run verify:check-all
